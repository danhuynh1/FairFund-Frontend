{"ast":null,"code":"// src/api/expenseService.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/expenses';\n\n/**\r\n * Adds a new expense to a group.\r\n * @param {object} expenseData - The expense details { description, amount, group }.\r\n * @param {string} token - The user's JWT for authorization.\r\n * @returns {Promise<object>} The newly created expense object.\r\n */\nexport const addExpense = async (expenseData, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/add`, expenseData, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error adding expense:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n/**\r\n * Fetches all expenses for a specific group.\r\n * @param {string} groupId - The ID of the group.\r\n * @param {string} token - The user's JWT for authorization.\r\n * @returns {Promise<Array>} An array of expense objects for the group.\r\n  */\nexport const getGroupExpenses = async (groupId, token) => {\n  try {\n    const response = await axios.get(`${API_URL}/group/${groupId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Error fetching group expenses:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","addExpense","expenseData","token","response","post","headers","data","error","_error$response","console","message","getGroupExpenses","groupId","get","_error$response2"],"sources":["C:/Users/dhuyn/Sync/Projects/fairfund-frontend/fairfund-frontend/src/api/expenseService.js"],"sourcesContent":["// src/api/expenseService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/expenses';\r\n\r\n/**\r\n * Adds a new expense to a group.\r\n * @param {object} expenseData - The expense details { description, amount, group }.\r\n * @param {string} token - The user's JWT for authorization.\r\n * @returns {Promise<object>} The newly created expense object.\r\n */\r\nexport const addExpense = async (expenseData, token) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/add`, expenseData, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding expense:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Fetches all expenses for a specific group.\r\n * @param {string} groupId - The ID of the group.\r\n * @param {string} token - The user's JWT for authorization.\r\n * @returns {Promise<Array>} An array of expense objects for the group.\r\n  */\r\n  export const getGroupExpenses = async (groupId, token) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/group/${groupId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching group expenses:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  };\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,WAAW,EAAEC,KAAK,KAAK;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,MAAM,EAAEE,WAAW,EAAE;MAC/DI,OAAO,EAAE;QACP,eAAe,EAAE,UAAUH,KAAK;MAClC;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdC,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IAC7E,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACE,OAAO,MAAMI,gBAAgB,GAAG,MAAAA,CAAOC,OAAO,EAAEV,KAAK,KAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,UAAUa,OAAO,EAAE,EAAE;MAC9DP,OAAO,EAAE;QACP,eAAe,EAAE,UAAUH,KAAK;MAClC;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAO,gBAAA;IACdL,OAAO,CAACF,KAAK,CAAC,gCAAgC,EAAE,EAAAO,gBAAA,GAAAP,KAAK,CAACJ,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBR,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACtF,MAAMH,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}