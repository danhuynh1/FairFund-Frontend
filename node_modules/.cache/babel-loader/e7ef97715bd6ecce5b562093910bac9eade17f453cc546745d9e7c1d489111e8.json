{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_API_URL;\nconst API_URL = `${BASE_URL}/groups`;\nexport const createGroup = async (groupData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  try {\n    const response = await axios.post(`${API_URL}/create`, groupData, config);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(\"Error creating group:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: \"A network error occurred.\"\n    };\n  }\n};\nexport const getMyGroups = async token => {\n  try {\n    const response = await axios.get(API_URL, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"Error fetching groups:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\nexport const getGroupDetails = async (groupId, token) => {\n  try {\n    const response = await axios.get(`${API_URL}/${groupId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"Error fetching group details:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\nexport const addUsersToGroup = async (groupId, userIds, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/${groupId}/add-users`, {\n      userIds\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error(\"Error adding users to group:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};\nexport const updateGroupBudget = async (groupId, budgetData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  try {\n    const response = await axios.put(`${API_URL}/${groupId}/budget`, budgetData, config);\n    return response.data;\n  } catch (error) {\n    var _error$response6, _error$response7;\n    console.error(\"Error updating group budget:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || {\n      message: \"A network error occurred.\"\n    };\n  }\n};\nexport const addBudgetPlan = async (groupId, planData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  try {\n    const response = await axios.post(`${API_URL}/${groupId}/budget-plans`, planData, config);\n    return response.data;\n  } catch (error) {\n    var _error$response8, _error$response9;\n    console.error(\"Error adding budget plan:\", ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n    throw ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || {\n      message: \"A network error occurred.\"\n    };\n  }\n};\nexport const getGroupActivity = async (groupId, token) => {\n  try {\n    const response = await axios.get(`${API_URL}/${groupId}/activity`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response0;\n    console.error(\"Error fetching group activity:\", ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n    throw error;\n  }\n};\n\n/**\r\n * Gets the current balances for all members in a group.\r\n * @param {string} groupId - The ID of the group.\r\n * @param {string} token - The current user's JWT for authorization.\r\n * @returns An object containing the balance details for each member.\r\n */\nexport const getGroupBalances = async (groupId, token) => {\n  try {\n    const response = await axios.get(`${GROUP_API_URL}/${groupId}/balances`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response1, _error$response10;\n    console.error(\"Error fetching group balances:\", ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n    throw ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || {\n      message: \"Failed to fetch group balances.\"\n    };\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_API_URL","API_URL","createGroup","groupData","token","config","headers","Authorization","response","post","data","error","_error$response","_error$response2","console","message","getMyGroups","get","_error$response3","getGroupDetails","groupId","_error$response4","addUsersToGroup","userIds","_error$response5","updateGroupBudget","budgetData","put","_error$response6","_error$response7","addBudgetPlan","planData","_error$response8","_error$response9","getGroupActivity","_error$response0","getGroupBalances","GROUP_API_URL","_error$response1","_error$response10"],"sources":["C:/Users/dhuyn/Sync/Projects/fairfund-frontend/fairfund-frontend/src/api/groupService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\nconst API_URL = `${BASE_URL}/groups`;\r\n\r\nexport const createGroup = async (groupData, token) => {\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n  try {\r\n    const response = await axios.post(`${API_URL}/create`, groupData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating group:\", error.response?.data || error.message);\r\n    throw error.response?.data || { message: \"A network error occurred.\" };\r\n  }\r\n};\r\n\r\nexport const getMyGroups = async (token) => {\r\n  try {\r\n    const response = await axios.get(API_URL, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching groups:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getGroupDetails = async (groupId, token) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${groupId}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching group details:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addUsersToGroup = async (groupId, userIds, token) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/${groupId}/add-users`,\r\n      { userIds },\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error adding users to group:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateGroupBudget = async (groupId, budgetData, token) => {\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n  try {\r\n    const response = await axios.put(`${API_URL}/${groupId}/budget`, budgetData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating group budget:\", error.response?.data || error.message);\r\n    throw error.response?.data || { message: \"A network error occurred.\" };\r\n  }\r\n};\r\n\r\nexport const addBudgetPlan = async (groupId, planData, token) => {\r\n  const config = { headers: { Authorization: `Bearer ${token}` } };\r\n  try {\r\n    const response = await axios.post(`${API_URL}/${groupId}/budget-plans`, planData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error adding budget plan:\", error.response?.data || error.message);\r\n    throw error.response?.data || { message: \"A network error occurred.\" };\r\n  }\r\n};\r\n\r\nexport const getGroupActivity = async (groupId, token) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${groupId}/activity`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching group activity:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Gets the current balances for all members in a group.\r\n * @param {string} groupId - The ID of the group.\r\n * @param {string} token - The current user's JWT for authorization.\r\n * @returns An object containing the balance details for each member.\r\n */\r\nexport const getGroupBalances = async (groupId, token) => {\r\n  try {\r\n    const response = await axios.get(`${GROUP_API_URL}/${groupId}/balances`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      \"Error fetching group balances:\",\r\n      error.response?.data || error.message\r\n    );\r\n    throw (\r\n      error.response?.data || { message: \"Failed to fetch group balances.\" }\r\n    );\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}