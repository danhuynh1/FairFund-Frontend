{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhuyn\\\\Sync\\\\Projects\\\\fairfund-frontend\\\\fairfund-frontend\\\\src\\\\components\\\\SettlementHistory.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettlementHistory = ({\n  history = [],\n  isLoading\n}) => {\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-500\",\n      children: \"Loading history...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 16\n    }, this);\n  }\n  if (history.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-center bg-gray-50 rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: \"No settlements have been recorded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"font-semibold text-lg mb-2\",\n      children: \"Payment History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2\",\n      children: history.map(settlement => {\n        var _settlement$from, _settlement$to;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-3 bg-gray-50 border rounded-md text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-blue-600\",\n              children: ((_settlement$from = settlement.from) === null || _settlement$from === void 0 ? void 0 : _settlement$from.name) || 'A user'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), ' ', \"paid\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-green-600\",\n              children: ((_settlement$to = settlement.to) === null || _settlement$to === void 0 ? void 0 : _settlement$to.name) || 'another user'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"$\", settlement.amount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: new Date(settlement.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, settlement._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = SettlementHistory;\nexport default SettlementHistory;\nvar _c;\n$RefreshReg$(_c, \"SettlementHistory\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SettlementHistory","history","isLoading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","settlement","_settlement$from","_settlement$to","from","name","to","amount","toFixed","Date","date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["C:/Users/dhuyn/Sync/Projects/fairfund-frontend/fairfund-frontend/src/components/SettlementHistory.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst SettlementHistory = ({ history = [], isLoading }) => {\r\n    if (isLoading) {\r\n        return <p className=\"text-sm text-gray-500\">Loading history...</p>;\r\n    }\r\n\r\n    if (history.length === 0) {\r\n        return (\r\n            <div className=\"p-4 text-center bg-gray-50 rounded-md\">\r\n                <p className=\"text-sm text-gray-500\">No settlements have been recorded yet.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-3\">\r\n            <h4 className=\"font-semibold text-lg mb-2\">Payment History</h4>\r\n            <ul className=\"space-y-2\">\r\n                {history.map(settlement => (\r\n                    <li key={settlement._id} className=\"p-3 bg-gray-50 border rounded-md text-sm\">\r\n                        <p className=\"text-gray-800\">\r\n                            <span className=\"font-bold text-blue-600\">{settlement.from?.name || 'A user'}</span>\r\n                            {' '}paid{' '}\r\n                            <span className=\"font-bold text-green-600\">{settlement.to?.name || 'another user'}</span>\r\n                            {' '}<strong>${settlement.amount.toFixed(2)}</strong>\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-500 mt-1\">\r\n                            {new Date(settlement.date).toLocaleDateString()}\r\n                        </p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SettlementHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}