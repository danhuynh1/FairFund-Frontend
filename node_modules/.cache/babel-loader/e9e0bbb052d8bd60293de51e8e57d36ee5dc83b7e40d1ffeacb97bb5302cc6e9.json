{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhuyn\\\\Sync\\\\Projects\\\\fairfund-frontend\\\\fairfund-frontend\\\\src\\\\components\\\\ActivityPieChart.js\";\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\n\n/**\r\n * Generates shades of a color within a specific hue range.\r\n * @param {number} count - The number of colors to generate.\r\n * @param {object} options - Configuration for the color generation.\r\n * @param {number} options.startHue - The starting hue (e.g., 80 for yellow-green).\r\n * @param {number} options.endHue - The ending hue (e.g., 160 for blue-green).\r\n * @param {number} options.saturation - The color saturation (0-100).\r\n * @param {number} options.lightness - The color lightness (0-100).\r\n * @returns {string[]} An array of HSL color strings.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateHslShades = (count, {\n  startHue = 80,\n  endHue = 160,\n  saturation = 70,\n  lightness = 50\n} = {}) => {\n  const colors = [];\n  // If only one color, just use the start hue\n  if (count === 1) {\n    return [`hsl(${startHue}, ${saturation}%, ${lightness}%)`];\n  }\n  const hueRange = endHue - startHue;\n  const hueStep = hueRange / (count - 1); // Step between colors\n\n  for (let i = 0; i < count; i++) {\n    const hue = startHue + i * hueStep;\n    colors.push(`hsl(${hue}, ${saturation}%, ${lightness}%)`);\n  }\n  return colors;\n};\nconst ActivityPieChart = ({\n  data\n}) => {\n  // Generate shades of green based on the data length\n  const COLORS = generateHslShades(data.length);\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: 400,\n    height: 300,\n    children: [/*#__PURE__*/_jsxDEV(Pie, {\n      data: `data`,\n      dataKey: \"value\",\n      nameKey: \"name\",\n      cx: \"50%\",\n      cy: \"50%\",\n      outerRadius: 100,\n      label: true,\n      children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: COLORS[index]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = ActivityPieChart;\nexport default ActivityPieChart;\nvar _c;\n$RefreshReg$(_c, \"ActivityPieChart\");","map":{"version":3,"names":["PieChart","Pie","Cell","Tooltip","Legend","jsxDEV","_jsxDEV","generateHslShades","count","startHue","endHue","saturation","lightness","colors","hueRange","hueStep","i","hue","push","ActivityPieChart","data","COLORS","length","width","height","children","dataKey","nameKey","cx","cy","outerRadius","label","map","entry","index","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dhuyn/Sync/Projects/fairfund-frontend/fairfund-frontend/src/components/ActivityPieChart.js"],"sourcesContent":["import { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\r\n\r\n/**\r\n * Generates shades of a color within a specific hue range.\r\n * @param {number} count - The number of colors to generate.\r\n * @param {object} options - Configuration for the color generation.\r\n * @param {number} options.startHue - The starting hue (e.g., 80 for yellow-green).\r\n * @param {number} options.endHue - The ending hue (e.g., 160 for blue-green).\r\n * @param {number} options.saturation - The color saturation (0-100).\r\n * @param {number} options.lightness - The color lightness (0-100).\r\n * @returns {string[]} An array of HSL color strings.\r\n */\r\nconst generateHslShades = (\r\n  count,\r\n  { startHue = 80, endHue = 160, saturation = 70, lightness = 50 } = {}\r\n) => {\r\n  const colors = [];\r\n  // If only one color, just use the start hue\r\n  if (count === 1) {\r\n    return [`hsl(${startHue}, ${saturation}%, ${lightness}%)`];\r\n  }\r\n\r\n  const hueRange = endHue - startHue;\r\n  const hueStep = hueRange / (count - 1); // Step between colors\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const hue = startHue + i * hueStep;\r\n    colors.push(`hsl(${hue}, ${saturation}%, ${lightness}%)`);\r\n  }\r\n  return colors;\r\n};\r\n\r\nconst ActivityPieChart = ({ data }) => {\r\n  // Generate shades of green based on the data length\r\n  const COLORS = generateHslShades(data.length);\r\n\r\n  return (\r\n    <PieChart width={400} height={300}>\r\n      <Pie\r\n        data={`data`}\r\n        dataKey=\"value\"\r\n        nameKey=\"name\"\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        outerRadius={100}\r\n        label\r\n      >\r\n        {data.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={COLORS[index]} />\r\n        ))}\r\n      </Pie>\r\n      <Tooltip />\r\n      <Legend />\r\n    </PieChart>\r\n  );\r\n};\r\nexport default ActivityPieChart;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,iBAAiB,GAAGA,CACxBC,KAAK,EACL;EAAEC,QAAQ,GAAG,EAAE;EAAEC,MAAM,GAAG,GAAG;EAAEC,UAAU,GAAG,EAAE;EAAEC,SAAS,GAAG;AAAG,CAAC,GAAG,CAAC,CAAC,KAClE;EACH,MAAMC,MAAM,GAAG,EAAE;EACjB;EACA,IAAIL,KAAK,KAAK,CAAC,EAAE;IACf,OAAO,CAAC,OAAOC,QAAQ,KAAKE,UAAU,MAAMC,SAAS,IAAI,CAAC;EAC5D;EAEA,MAAME,QAAQ,GAAGJ,MAAM,GAAGD,QAAQ;EAClC,MAAMM,OAAO,GAAGD,QAAQ,IAAIN,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;;EAExC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,EAAEQ,CAAC,EAAE,EAAE;IAC9B,MAAMC,GAAG,GAAGR,QAAQ,GAAGO,CAAC,GAAGD,OAAO;IAClCF,MAAM,CAACK,IAAI,CAAC,OAAOD,GAAG,KAAKN,UAAU,MAAMC,SAAS,IAAI,CAAC;EAC3D;EACA,OAAOC,MAAM;AACf,CAAC;AAED,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACrC;EACA,MAAMC,MAAM,GAAGd,iBAAiB,CAACa,IAAI,CAACE,MAAM,CAAC;EAE7C,oBACEhB,OAAA,CAACN,QAAQ;IAACuB,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,gBAChCnB,OAAA,CAACL,GAAG;MACFmB,IAAI,EAAE,MAAO;MACbM,OAAO,EAAC,OAAO;MACfC,OAAO,EAAC,MAAM;MACdC,EAAE,EAAC,KAAK;MACRC,EAAE,EAAC,KAAK;MACRC,WAAW,EAAE,GAAI;MACjBC,KAAK;MAAAN,QAAA,EAEJL,IAAI,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB5B,OAAA,CAACJ,IAAI;QAAuBiC,IAAI,EAAEd,MAAM,CAACa,KAAK;MAAE,GAArC,QAAQA,KAAK,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjC,OAAA,CAACH,OAAO;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXjC,OAAA,CAACF,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEf,CAAC;AAACC,EAAA,GAvBIrB,gBAAgB;AAwBtB,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}