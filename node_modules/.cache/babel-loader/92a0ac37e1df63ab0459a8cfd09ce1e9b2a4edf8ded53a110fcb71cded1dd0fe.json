{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/users';\n\n/**\r\n * Searches for a registered user by their exact email address.\r\n * @param {string} email - The email to search for.\r\n * @param {string} token - The current user's JWT for authorization.\r\n * @returns The found user's public data (_id, name, email).\r\n */\nexport const searchUserByEmail = async (email, token) => {\n  console.log(\"Searching for user with email:\", email);\n  try {\n    const response = await axios.get(`${API_URL}/search`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      params: {\n        email: email\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Error searching for user:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'A network error occurred.'\n    };\n  }\n};","map":{"version":3,"names":["axios","API_URL","searchUserByEmail","email","token","console","log","response","get","headers","params","data","error","_error$response","_error$response2","message"],"sources":["C:/Users/dhuyn/Sync/Projects/fairfund-frontend/fairfund-frontend/src/api/userService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/users';\r\n\r\n/**\r\n * Searches for a registered user by their exact email address.\r\n * @param {string} email - The email to search for.\r\n * @param {string} token - The current user's JWT for authorization.\r\n * @returns The found user's public data (_id, name, email).\r\n */\r\nexport const searchUserByEmail = async (email, token) => {\r\n    console.log(\"Searching for user with email:\", email);\r\n  try {\r\n    const response = await axios.get(`${API_URL}/search`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      params: {\r\n        email: email\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error searching for user:', error.response?.data || error.message);\r\n    throw error.response?.data || { message: 'A network error occurred.' };\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,KAAK,KAAK;EACrDC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEH,KAAK,CAAC;EACtD,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,SAAS,EAAE;MACpDQ,OAAO,EAAE;QACP,eAAe,EAAE,UAAUL,KAAK;MAClC,CAAC;MACDM,MAAM,EAAE;QACNP,KAAK,EAAEA;MACT;IACF,CAAC,CAAC;IACF,OAAOI,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA;IACdT,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACjF,MAAM,EAAAD,gBAAA,GAAAF,KAAK,CAACL,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBH,IAAI,KAAI;MAAEI,OAAO,EAAE;IAA4B,CAAC;EACxE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}